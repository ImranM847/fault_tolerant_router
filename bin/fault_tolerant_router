#!/usr/bin/env ruby

require 'optparse'
require 'net/smtp'
require 'mail'
require 'logger'
require 'yaml'
require 'fault_tolerant_router/iptables'
require 'fault_tolerant_router/monitor'

options = {
    config: '/etc/fault_tolerant_router.conf',
    debug: false,
    demo: false
}
parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{File.basename($0)} [options] generate_iptables|monitor"
  opts.on('--config=FILE', 'Configuration file (default /etc/fault_tolerant_router.conf)') do |configuration_file|
    options[:config] = configuration_file
  end
  opts.on('--debug', 'Print debug output') do |debug|
    options[:debug] = debug
  end
  opts.on('--demo', 'Demo routing changes by faking random uplink failures') do |demo|
    options[:demo] = demo
  end
end
begin
  parser.parse!
rescue OptionParser::ParseError
  puts parser.help
  exit 1
end

if ARGV.size != 1 || !%w(generate_iptables monitor).include?(ARGV[0])
  puts parser.help
  exit 1
end

unless File.exists?(options[:config])
  puts "Configuration file #{options[:config]} does not exists!"
  exit 1
end

DEMO = options[:demo]
#activate debug if we are in demo mode
DEBUG = options[:debug] || DEMO

config = YAML.load_file(options[:config])
UPLINKS = config[:uplinks]
LAN_INTERFACE = config[:downlinks][:lan]
DMZ_INTERFACE = config[:downlinks][:dmz]
TEST_IPS = config[:tests][:ips]
REQUIRED_SUCCESSFUL_TESTS = config[:tests][:required_successful]
PING_RETRIES = config[:tests][:ping_retries]
TEST_INTERVAL = config[:tests][:interval]
LOG_FILE = config[:log_file]
#todo: add in configuration file
LOG_MAX_SIZE = 1024000
LOG_OLD_FILES = 10
SEND_EMAIL = config[:email][:send]
EMAIL_SENDER = config[:email][:sender]
EMAIL_RECIPIENTS = config[:email][:recipients]
SMTP_PARAMETERS = config[:email][:smtp_parameters]
BASE_TABLE = config[:base_table]
BASE_PRIORITY = config[:base_priority]
BASE_FWMARK = config[:base_fwmark]

if ARGV[0] == 'generate_iptables'
  generate_iptables
else
  monitor
end
